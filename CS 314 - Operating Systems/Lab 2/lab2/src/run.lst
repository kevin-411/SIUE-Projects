 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 20480
    3                      ; Data size: 37
    4                      ; Text size: 3388
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x2000
    8                      ; Compiled by GCC
   10  00002000          	.align 2
   11  00002000          	LC0_LF0:
   12  00002000  70726f64	.ascii "producer.dlx.obj\000"
   12  00002004  75636572	
   12  00002008  2e646c78	
   12  0000200c  2e6f626a	
   12  00002010  00      	
   13  00002011          	.align 2
   14  00002014          	LC1_LF0:
   15  00002014  636f6e73	.ascii "consumer.dlx.obj\000"
   15  00002018  756d6572	
   15  0000201c  2e646c78	
   15  00002020  2e6f626a	
   15  00002024  00      	
   16  00002025          	.text
   17  00001000          	.align 2
   18  00001000          	.proc _main
   19  00001000          	.global _main
   20  00001000          	_main:
   21                      ;  Function 'main'; 112 bytes of locals, 0 regs to save.
   22  00001000  afbefffc	sw	-4(r29),r30; push fp
   23  00001004  001df020	add	r30,r0,r29; fp = sp
   24  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   25  0000100c  2fbd0078	subui	r29,r29,#120; alloc local storage
   26  00001010  8fc20004	lw	r2,4(r30)
   27  00001014  0c000d1c	jal	___main
   28  00001018  54000000	nop; not filled.
   29  0000101c  23bdfff8	addi	r29,r29,#-8
   30  00001020  8c4d0004	lw	r13,4(r2)
   31  00001024  afad0000	sw	(r29),r13
   32  00001028  0c000a1c	jal	_dstrtol
   33  0000102c  54000000	nop; not filled.
   34  00001030  00015020	add	r10,r0,r1
   35  00001034  8c420008	lw	r2,8(r2)
   36  00001038  afa20000	sw	(r29),r2
   37  0000103c  0c000a08	jal	_dstrtol
   38  00001040  54000000	nop; not filled.
   39  00001044  00015820	add	r11,r0,r1
   40  00001048  0c000250	jal	_shmget
   41  0000104c  54000000	nop; not filled.
   42  00001050  00012820	add	r5,r0,r1
   43  00001054  0c000280	jal	_lock_create
   44  00001058  54000000	nop; not filled.
   45  0000105c  00011020	add	r2,r0,r1
   46  00001060  afa20000	sw	(r29),r2
   47  00001064  0c000294	jal	_cond_create
   48  00001068  54000000	nop; not filled.
   49  0000106c  00012020	add	r4,r0,r1
   50  00001070  afa20000	sw	(r29),r2
   51  00001074  0c000284	jal	_cond_create
   52  00001078  54000000	nop; not filled.
   53  0000107c  00011820	add	r3,r0,r1
   54  00001080  200d0000	addi	r13,r0,#0
   55  00001084  afad0000	sw	(r29),r13
   56  00001088  0c000228	jal	_sem_create
   57  0000108c  54000000	nop; not filled.
   58  00001090  00016020	add	r12,r0,r1
   59  00001094  afa50000	sw	(r29),r5
   60  00001098  23c9ffe8	addi	r9,r30,#-24
   61  0000109c  afa90004	sw	4(r29),r9
   62  000010a0  0c000898	jal	_ditoa
   63  000010a4  54000000	nop; not filled.
   64  000010a8  afa20000	sw	(r29),r2
   65  000010ac  23c8ffc8	addi	r8,r30,#-56
   66  000010b0  afa80004	sw	4(r29),r8
   67  000010b4  0c000884	jal	_ditoa
   68  000010b8  54000000	nop; not filled.
   69  000010bc  afa30000	sw	(r29),r3
   70  000010c0  23c6ff88	addi	r6,r30,#-120
   71  000010c4  afa60004	sw	4(r29),r6
   72  000010c8  0c000870	jal	_ditoa
   73  000010cc  54000000	nop; not filled.
   74  000010d0  afa40000	sw	(r29),r4
   75  000010d4  23c7ffb8	addi	r7,r30,#-72
   76  000010d8  afa70004	sw	4(r29),r7
   77  000010dc  0c00085c	jal	_ditoa
   78  000010e0  54000000	nop; not filled.
   79  000010e4  afac0000	sw	(r29),r12
   80  000010e8  23c4ffd8	addi	r4,r30,#-40
   81  000010ec  afa40004	sw	4(r29),r4
   82  000010f0  0c000848	jal	_ditoa
   83  000010f4  54000000	nop; not filled.
   84  000010f8  afa50000	sw	(r29),r5
   85  000010fc  0c0001a8	jal	_shmat
   86  00001100  54000000	nop; not filled.
   87  00001104  ac2d0008	sw	8(r1),r13
   88  00001108  ac2d000c	sw	12(r1),r13
   89  0000110c  ac2d0010	sw	16(r1),r13
   90  00001110  20020000	addi	r2,r0,#0
   91  00001114  23bd0008	addi	r29,r29,#8
   92  00001118  004a082a	slt	r1,r2,r10
   93  0000111c  10200070	beqz	r1,L12_LF0
   94  00001120  54000000	nop; not filled.
   95  00001124  23c3ff98	addi	r3,r30,#-104
   96  00001128  00072820	add	r5,r0,r7
   97  0000112c          	L5_LF0:
   98  0000112c  23bdfff8	addi	r29,r29,#-8
   99  00001130  afa20000	sw	(r29),r2
  100  00001134  afa30004	sw	4(r29),r3
  101  00001138  0c000800	jal	_ditoa
  102  0000113c  54000000	nop; not filled.
  103  00001140  23bdffe8	addi	r29,r29,#-24
  104  00001144  3c0d0000	lhi	r13,((LC0_LF0)>>16)&0xffff
  105  00001148  25ad2000	addui	r13,r13,(LC0_LF0)&0xffff
  106  0000114c  afad0000	sw	(r29),r13
  107  00001150  afa90004	sw	4(r29),r9
  108  00001154  afa80008	sw	8(r29),r8
  109  00001158  afa6000c	sw	12(r29),r6
  110  0000115c  afa50010	sw	16(r29),r5
  111  00001160  afa30014	sw	20(r29),r3
  112  00001164  afa40018	sw	24(r29),r4
  113  00001168  200d0000	addi	r13,r0,#0
  114  0000116c  afad001c	sw	28(r29),r13
  115  00001170  0c00011c	jal	_process_create
  116  00001174  54000000	nop; not filled.
  117  00001178  23bd0020	addi	r29,r29,#32
  118  0000117c  20420001	addi	r2,r2,#1
  119  00001180  004a082a	slt	r1,r2,r10
  120  00001184  1420ffa4	bnez	r1,L5_LF0
  121  00001188  54000000	nop; not filled.
  122  0000118c  20020000	addi	r2,r0,#0
  123  00001190          	L12_LF0:
  124  00001190  004b082a	slt	r1,r2,r11
  125  00001194  1020007c	beqz	r1,L8_LF0
  126  00001198  54000000	nop; not filled.
  127  0000119c  23c3ffa8	addi	r3,r30,#-88
  128  000011a0  23c8ffe8	addi	r8,r30,#-24
  129  000011a4  23c7ffc8	addi	r7,r30,#-56
  130  000011a8  23c6ff88	addi	r6,r30,#-120
  131  000011ac  23c5ffb8	addi	r5,r30,#-72
  132  000011b0  23c4ffd8	addi	r4,r30,#-40
  133  000011b4          	L10_LF0:
  134  000011b4  23bdfff8	addi	r29,r29,#-8
  135  000011b8  afa20000	sw	(r29),r2
  136  000011bc  afa30004	sw	4(r29),r3
  137  000011c0  0c000778	jal	_ditoa
  138  000011c4  54000000	nop; not filled.
  139  000011c8  23bdffe8	addi	r29,r29,#-24
  140  000011cc  3c0d0000	lhi	r13,((LC1_LF0)>>16)&0xffff
  141  000011d0  25ad2014	addui	r13,r13,(LC1_LF0)&0xffff
  142  000011d4  afad0000	sw	(r29),r13
  143  000011d8  afa80004	sw	4(r29),r8
  144  000011dc  afa70008	sw	8(r29),r7
  145  000011e0  afa6000c	sw	12(r29),r6
  146  000011e4  afa50010	sw	16(r29),r5
  147  000011e8  afa30014	sw	20(r29),r3
  148  000011ec  afa40018	sw	24(r29),r4
  149  000011f0  200d0000	addi	r13,r0,#0
  150  000011f4  afad001c	sw	28(r29),r13
  151  000011f8  0c000094	jal	_process_create
  152  000011fc  54000000	nop; not filled.
  153  00001200  23bd0020	addi	r29,r29,#32
  154  00001204  20420001	addi	r2,r2,#1
  155  00001208  004b082a	slt	r1,r2,r11
  156  0000120c  1420ffa4	bnez	r1,L10_LF0
  157  00001210  54000000	nop; not filled.
  158  00001214          	L8_LF0:
  159  00001214  23bdfff8	addi	r29,r29,#-8
  160  00001218  afac0000	sw	(r29),r12
  161  0000121c  0c0000a0	jal	_sem_wait
  162  00001220  54000000	nop; not filled.
  163  00001224  23bd0008	addi	r29,r29,#8
  164  00001228  0c000afc	jal	_exit
  165  0000122c  54000000	nop
  166  00001230          	.endproc _main
  167                      ;;;
  168                      ;;; Stub functions for DLX traps.
  169                      ;;;
  170                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  171                      ;;;
  172                      ;;; The traps such as Open and Close
  173                      ;;; (note the capital letters) are for use by user programs.  The traps
  174                      ;;; with names such as open and close (lower case) are for use by the OS.
  175                      ;;;
  178  00001230          	.align 2
  180                      ;;; The following are the traps to be used by user-level programs
  181                      ;;;
  183  00001230          	.align 2
  184  00001230          	.proc _Open
  185  00001230          	.global _Open
  186  00001230          	_Open:
  187                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  188                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  189                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  190  00001230  44000213	trap	#0x213
  191  00001234  4be00000	jr	r31
  192  00001238  54000000	nop
  193  0000123c          	.endproc _Open
  195  0000123c          	.proc _Close
  196  0000123c          	.global _Close
  197  0000123c          	_Close:
  198  0000123c  44000214	trap	#0x214
  199  00001240  4be00000	jr	r31
  200  00001244  54000000	nop
  201  00001248          	.endproc _Close
  203  00001248          	.proc _Read
  204  00001248          	.global _Read
  205  00001248          	_Read:
  206  00001248  44000210	trap	#0x210
  207  0000124c  4be00000	jr	r31
  208  00001250  54000000	nop
  209  00001254          	.endproc _Read
  211  00001254          	.proc _Write
  212  00001254          	.global _Write
  213  00001254          	_Write:
  214  00001254  44000211	trap	#0x211
  215  00001258  4be00000	jr	r31
  216  0000125c  54000000	nop
  217  00001260          	.endproc _Write
  219  00001260          	.proc _Lseek
  220  00001260          	.global _Lseek
  221  00001260          	_Lseek:
  222  00001260  44000212	trap	#0x212
  223  00001264  4be00000	jr	r31
  224  00001268  54000000	nop
  225  0000126c          	.endproc _Lseek
  227  0000126c          	.proc _Putchar
  228  0000126c          	.global _Putchar
  229  0000126c          	_Putchar:
  230  0000126c  44000280	trap	#0x280
  231  00001270  4be00000	jr	r31
  232  00001274  54000000	nop
  233  00001278          	.endproc _Putchar
  235  00001278          	.proc _Printf
  236  00001278          	.global _Printf
  237  00001278          	_Printf:
  238  00001278  44000201	trap	#0x201
  239  0000127c  4be00000	jr	r31
  240  00001280  54000000	nop
  241  00001284          	.endproc _Printf
  243  00001284          	.proc _getpid
  244  00001284          	.global _getpid
  245  00001284          	_getpid:
  246  00001284  44000431	trap	#0x431
  247  00001288  4be00000	jr	r31
  248  0000128c  54000000	nop
  249  00001290          	.endproc _getpid
  251  00001290          	.proc _process_create
  252  00001290          	.global _process_create
  253  00001290          	_process_create:
  254  00001290  44000432	trap	#0x432
  255  00001294  4be00000	jr	r31
  256  00001298  54000000	nop
  257  0000129c          	.endproc _process_create
  259  0000129c          	.proc _shmget
  260  0000129c          	.global _shmget
  261  0000129c          	_shmget:
  262  0000129c  44000440	trap	#0x440
  263  000012a0  4be00000	jr	r31
  264  000012a4  54000000	nop
  265  000012a8          	.endproc _shmget
  267  000012a8          	.proc _shmat
  268  000012a8          	.global _shmat
  269  000012a8          	_shmat:
  270  000012a8  44000441	trap	#0x441
  271  000012ac  4be00000	jr	r31
  272  000012b0  54000000	nop
  273  000012b4          	.endproc _shmat
  275  000012b4          	.proc _sem_create
  276  000012b4          	.global _sem_create
  277  000012b4          	_sem_create:
  278  000012b4  44000450	trap	#0x450
  279  000012b8  4be00000	jr	r31
  280  000012bc  54000000	nop
  281  000012c0          	.endproc _sem_create
  283  000012c0          	.proc _sem_wait
  284  000012c0          	.global _sem_wait
  285  000012c0          	_sem_wait:
  286  000012c0  44000451	trap	#0x451
  287  000012c4  4be00000	jr	r31
  288  000012c8  54000000	nop
  289  000012cc          	.endproc _sem_wait
  291  000012cc          	.proc _sem_signal
  292  000012cc          	.global _sem_signal
  293  000012cc          	_sem_signal:
  294  000012cc  44000452	trap	#0x452
  295  000012d0  4be00000	jr	r31
  296  000012d4  54000000	nop
  297  000012d8          	.endproc _sem_signal
  299  000012d8          	.proc _lock_create
  300  000012d8          	.global _lock_create
  301  000012d8          	_lock_create:
  302  000012d8  44000453	trap	#0x453
  303  000012dc  4be00000	jr	r31
  304  000012e0  54000000	nop
  305  000012e4          	.endproc _lock_create
  307  000012e4          	.proc _lock_acquire
  308  000012e4          	.global _lock_acquire
  309  000012e4          	_lock_acquire:
  310  000012e4  44000454	trap	#0x454
  311  000012e8  4be00000	jr	r31
  312  000012ec  54000000	nop
  313  000012f0          	.endproc _lock_acquire
  315  000012f0          	.proc _lock_release
  316  000012f0          	.global _lock_release
  317  000012f0          	_lock_release:
  318  000012f0  44000455	trap	#0x455
  319  000012f4  4be00000	jr	r31
  320  000012f8  54000000	nop
  321  000012fc          	.endproc _lock_release
  323  000012fc          	.proc _cond_create
  324  000012fc          	.global _cond_create
  325  000012fc          	_cond_create:
  326  000012fc  44000456	trap	#0x456
  327  00001300  4be00000	jr	r31
  328  00001304  54000000	nop
  329  00001308          	.endproc _cond_create
  331  00001308          	.proc _cond_wait
  332  00001308          	.global _cond_wait
  333  00001308          	_cond_wait:
  334  00001308  44000457	trap	#0x457
  335  0000130c  4be00000	jr	r31
  336  00001310  54000000	nop
  337  00001314          	.endproc _cond_wait
  339  00001314          	.proc _cond_signal
  340  00001314          	.global _cond_signal
  341  00001314          	_cond_signal:
  342  00001314  44000458	trap	#0x458
  343  00001318  4be00000	jr	r31
  344  0000131c  54000000	nop
  345  00001320          	.endproc _cond_signal
  347  00001320          	.proc _cond_broadcast
  348  00001320          	.global _cond_broadcast
  349  00001320          	_cond_broadcast:
  350  00001320  44000459	trap	#0x459
  351  00001324  4be00000	jr	r31
  352  00001328  54000000	nop
  353  0000132c          	.endproc _cond_broadcast
  355                      ; Compiled by GCC
  357  0000132c          	.align 2
  358  0000132c          	.proc _isspace
  359  0000132c          	.global _isspace
  360  0000132c          	_isspace:
  361                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
  362  0000132c  afbefffc	sw	-4(r29),r30; push fp
  363  00001330  001df020	add	r30,r0,r29; fp = sp
  364  00001334  afbffff8	sw	-8(r29),r31; push ret addr
  365  00001338  2fbd0010	subui	r29,r29,#16; alloc local storage
  366  0000133c  afa20000	sw	0(r29),r2
  367  00001340  83c20003	lb	r2,3(r30)
  368  00001344  201f0000	addi	r31,r0,#0
  369  00001348  304100ff	andi	r1,r2,#0x00ff
  370  0000134c  60210020	seqi	r1,r1,#32
  371  00001350  14200018	bnez	r1,L6_LF2
  372  00001354  54000000	nop; not filled.
  373  00001358  2041fff7	addi	r1,r2,#-9
  374  0000135c  302100ff	andi	r1,r1,#0x00ff
  375  00001360  70210001	sleui	r1,r1,#1
  376  00001364  10200008	beqz	r1,L5_LF2
  377  00001368  54000000	nop; not filled.
  378  0000136c          	L6_LF2:
  379  0000136c  201f0001	addi	r31,r0,#1
  380  00001370          	L5_LF2:
  381  00001370  001f0820	add	r1,r0,r31
  382  00001374  8fa20000	lw	r2,0(r29)
  383  00001378  8fdffff8	lw	r31,-8(r30)
  384  0000137c  001ee820	add	r29,r0,r30
  385  00001380  8fdefffc	lw	r30,-4(r30)
  386  00001384  4be00000	jr	r31
  387  00001388  54000000	nop
  388  0000138c          	.endproc _isspace
  389  0000138c          	.align 2
  390  0000138c          	.proc _isxdigit
  391  0000138c          	.global _isxdigit
  392  0000138c          	_isxdigit:
  393                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
  394  0000138c  afbefffc	sw	-4(r29),r30; push fp
  395  00001390  001df020	add	r30,r0,r29; fp = sp
  396  00001394  afbffff8	sw	-8(r29),r31; push ret addr
  397  00001398  2fbd0010	subui	r29,r29,#16; alloc local storage
  398  0000139c  afa20000	sw	0(r29),r2
  399  000013a0  83df0003	lb	r31,3(r30)
  400  000013a4  20020000	addi	r2,r0,#0
  401  000013a8  23e1ffd0	addi	r1,r31,#-48
  402  000013ac  302100ff	andi	r1,r1,#0x00ff
  403  000013b0  70210009	sleui	r1,r1,#9
  404  000013b4  14200028	bnez	r1,L12_LF2
  405  000013b8  54000000	nop; not filled.
  406  000013bc  23e1ff9f	addi	r1,r31,#-97
  407  000013c0  302100ff	andi	r1,r1,#0x00ff
  408  000013c4  70210005	sleui	r1,r1,#5
  409  000013c8  14200014	bnez	r1,L12_LF2
  410  000013cc  54000000	nop; not filled.
  411  000013d0  33e100ff	andi	r1,r31,#0x00ff
  412  000013d4  64210041	snei	r1,r1,#65
  413  000013d8  14200008	bnez	r1,L11_LF2
  414  000013dc  54000000	nop; not filled.
  415  000013e0          	L12_LF2:
  416  000013e0  20020001	addi	r2,r0,#1
  417  000013e4          	L11_LF2:
  418  000013e4  00020820	add	r1,r0,r2
  419  000013e8  8fa20000	lw	r2,0(r29)
  420  000013ec  8fdffff8	lw	r31,-8(r30)
  421  000013f0  001ee820	add	r29,r0,r30
  422  000013f4  8fdefffc	lw	r30,-4(r30)
  423  000013f8  4be00000	jr	r31
  424  000013fc  54000000	nop
  425  00001400          	.endproc _isxdigit
  426  00001400          	.align 2
  427  00001400          	.proc _dstrcpy
  428  00001400          	.global _dstrcpy
  429  00001400          	_dstrcpy:
  430                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
  431  00001400  afbefffc	sw	-4(r29),r30; push fp
  432  00001404  001df020	add	r30,r0,r29; fp = sp
  433  00001408  afbffff8	sw	-8(r29),r31; push ret addr
  434  0000140c  2fbd0010	subui	r29,r29,#16; alloc local storage
  435  00001410  afa20000	sw	0(r29),r2
  436  00001414  afa30004	sw	4(r29),r3
  437  00001418  8fdf0000	lw	r31,(r30)
  438  0000141c  8fc20004	lw	r2,4(r30)
  439  00001420  001f1820	add	r3,r0,r31
  440  00001424          	L19_LF2:
  441  00001424  80410000	lb	r1,(r2)
  442  00001428  a3e10000	sb	(r31),r1
  443  0000142c  20420001	addi	r2,r2,#1
  444  00001430  23ff0001	addi	r31,r31,#1
  445  00001434  302100ff	andi	r1,r1,#0x00ff
  446  00001438  64210000	snei	r1,r1,#0
  447  0000143c  1420ffe4	bnez	r1,L19_LF2
  448  00001440  54000000	nop; not filled.
  449  00001444  00030820	add	r1,r0,r3
  450  00001448  8fa20000	lw	r2,0(r29)
  451  0000144c  8fa30004	lw	r3,4(r29)
  452  00001450  8fdffff8	lw	r31,-8(r30)
  453  00001454  001ee820	add	r29,r0,r30
  454  00001458  8fdefffc	lw	r30,-4(r30)
  455  0000145c  4be00000	jr	r31
  456  00001460  54000000	nop
  457  00001464          	.endproc _dstrcpy
  458  00001464          	.align 2
  459  00001464          	.proc _dstrncpy
  460  00001464          	.global _dstrncpy
  461  00001464          	_dstrncpy:
  462                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
  463  00001464  afbefffc	sw	-4(r29),r30; push fp
  464  00001468  001df020	add	r30,r0,r29; fp = sp
  465  0000146c  afbffff8	sw	-8(r29),r31; push ret addr
  466  00001470  2fbd0018	subui	r29,r29,#24; alloc local storage
  467  00001474  afa20000	sw	0(r29),r2
  468  00001478  afa30004	sw	4(r29),r3
  469  0000147c  afa40008	sw	8(r29),r4
  470  00001480  8fc20000	lw	r2,(r30)
  471  00001484  8fc30004	lw	r3,4(r30)
  472  00001488  8fdf0008	lw	r31,8(r30)
  473  0000148c  00022020	add	r4,r0,r2
  474  00001490  08000024	j	L37_LF2
  475  00001494  54000000	nop; not filled.
  476  00001498          	L34_LF2:
  477  00001498  80610000	lb	r1,(r3)
  478  0000149c  a0410000	sb	(r2),r1
  479  000014a0  20630001	addi	r3,r3,#1
  480  000014a4  20420001	addi	r2,r2,#1
  481  000014a8  302100ff	andi	r1,r1,#0x00ff
  482  000014ac  64210000	snei	r1,r1,#0
  483  000014b0  10200018	beqz	r1,L32_LF2
  484  000014b4  54000000	nop; not filled.
  485  000014b8          	L37_LF2:
  486  000014b8  001f0820	add	r1,r0,r31
  487  000014bc  23ffffff	addi	r31,r31,#-1
  488  000014c0  70210000	slei	r1,r1,#0
  489  000014c4  1020ffd0	beqz	r1,L34_LF2
  490  000014c8  54000000	nop; not filled.
  491  000014cc          	L32_LF2:
  492  000014cc  00040820	add	r1,r0,r4
  493  000014d0  8fa20000	lw	r2,0(r29)
  494  000014d4  8fa30004	lw	r3,4(r29)
  495  000014d8  8fa40008	lw	r4,8(r29)
  496  000014dc  8fdffff8	lw	r31,-8(r30)
  497  000014e0  001ee820	add	r29,r0,r30
  498  000014e4  8fdefffc	lw	r30,-4(r30)
  499  000014e8  4be00000	jr	r31
  500  000014ec  54000000	nop
  501  000014f0          	.endproc _dstrncpy
  502  000014f0          	.align 2
  503  000014f0          	.proc _dstrcat
  504  000014f0          	.global _dstrcat
  505  000014f0          	_dstrcat:
  506                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
  507  000014f0  afbefffc	sw	-4(r29),r30; push fp
  508  000014f4  001df020	add	r30,r0,r29; fp = sp
  509  000014f8  afbffff8	sw	-8(r29),r31; push ret addr
  510  000014fc  2fbd0010	subui	r29,r29,#16; alloc local storage
  511  00001500  afa20000	sw	0(r29),r2
  512  00001504  afa30004	sw	4(r29),r3
  513  00001508  8fdf0000	lw	r31,(r30)
  514  0000150c  001f1820	add	r3,r0,r31
  515  00001510  90610000	lbu	r1,(r3)
  516  00001514  64210000	snei	r1,r1,#0
  517  00001518  10200018	beqz	r1,L50_LF2
  518  0000151c  54000000	nop; not filled.
  519  00001520          	L51_LF2:
  520  00001520  23ff0001	addi	r31,r31,#1
  521  00001524  93e10000	lbu	r1,(r31)
  522  00001528  64210000	snei	r1,r1,#0
  523  0000152c  1420fff0	bnez	r1,L51_LF2
  524  00001530  54000000	nop; not filled.
  525  00001534          	L50_LF2:
  526  00001534  001f1020	add	r2,r0,r31
  527  00001538  8fdf0004	lw	r31,4(r30)
  528  0000153c          	L54_LF2:
  529  0000153c  83e10000	lb	r1,(r31)
  530  00001540  a0410000	sb	(r2),r1
  531  00001544  23ff0001	addi	r31,r31,#1
  532  00001548  20420001	addi	r2,r2,#1
  533  0000154c  302100ff	andi	r1,r1,#0x00ff
  534  00001550  64210000	snei	r1,r1,#0
  535  00001554  1420ffe4	bnez	r1,L54_LF2
  536  00001558  54000000	nop; not filled.
  537  0000155c  00030820	add	r1,r0,r3
  538  00001560  8fa20000	lw	r2,0(r29)
  539  00001564  8fa30004	lw	r3,4(r29)
  540  00001568  8fdffff8	lw	r31,-8(r30)
  541  0000156c  001ee820	add	r29,r0,r30
  542  00001570  8fdefffc	lw	r30,-4(r30)
  543  00001574  4be00000	jr	r31
  544  00001578  54000000	nop
  545  0000157c          	.endproc _dstrcat
  546  0000157c          	.align 2
  547  0000157c          	.proc _dstrncmp
  548  0000157c          	.global _dstrncmp
  549  0000157c          	_dstrncmp:
  550                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
  551  0000157c  afbefffc	sw	-4(r29),r30; push fp
  552  00001580  001df020	add	r30,r0,r29; fp = sp
  553  00001584  afbffff8	sw	-8(r29),r31; push ret addr
  554  00001588  2fbd0018	subui	r29,r29,#24; alloc local storage
  555  0000158c  afa20000	sw	0(r29),r2
  556  00001590  afa30004	sw	4(r29),r3
  557  00001594  afa40008	sw	8(r29),r4
  558  00001598  afa5000c	sw	12(r29),r5
  559  0000159c  8fc30000	lw	r3,(r30)
  560  000015a0  8fc40004	lw	r4,4(r30)
  561  000015a4  8fc50008	lw	r5,8(r30)
  562  000015a8  20020000	addi	r2,r0,#0
  563  000015ac  0045082a	slt	r1,r2,r5
  564  000015b0  1020003c	beqz	r1,L73_LF2
  565  000015b4  54000000	nop; not filled.
  566  000015b8          	L75_LF2:
  567  000015b8  909f0000	lbu	r31,(r4)
  568  000015bc  67e10000	snei	r1,r31,#0
  569  000015c0  10200038	beqz	r1,L86_LF2
  570  000015c4  54000000	nop; not filled.
  571  000015c8  90610000	lbu	r1,(r3)
  572  000015cc  003f0829	sne	r1,r1,r31
  573  000015d0  1420001c	bnez	r1,L73_LF2
  574  000015d4  54000000	nop; not filled.
  575  000015d8  20630001	addi	r3,r3,#1
  576  000015dc  20840001	addi	r4,r4,#1
  577  000015e0  20420001	addi	r2,r2,#1
  578  000015e4  0045082a	slt	r1,r2,r5
  579  000015e8  1420ffcc	bnez	r1,L75_LF2
  580  000015ec  54000000	nop; not filled.
  581  000015f0          	L73_LF2:
  582  000015f0  00450828	seq	r1,r2,r5
  583  000015f4  10200010	beqz	r1,L80_LF2
  584  000015f8  54000000	nop; not filled.
  585  000015fc          	L86_LF2:
  586  000015fc  20010000	addi	r1,r0,#0
  587  00001600  08000028	j	L84_LF2
  588  00001604  54000000	nop; not filled.
  589  00001608          	L80_LF2:
  590  00001608  907f0000	lbu	r31,(r3)
  591  0000160c  90830000	lbu	r3,(r4)
  592  00001610  03e30822	sub	r1,r31,r3
  593  00001614  74210000	sgei	r1,r1,#0
  594  00001618  2002ffff	addi	r2,r0,#-1
  595  0000161c  10200008	beqz	r1,L82_LF2
  596  00001620  54000000	nop; not filled.
  597  00001624  03e31029	sne	r2,r31,r3
  598  00001628          	L82_LF2:
  599  00001628  00020820	add	r1,r0,r2
  600  0000162c          	L84_LF2:
  601  0000162c  8fa20000	lw	r2,0(r29)
  602  00001630  8fa30004	lw	r3,4(r29)
  603  00001634  8fa40008	lw	r4,8(r29)
  604  00001638  8fa5000c	lw	r5,12(r29)
  605  0000163c  8fdffff8	lw	r31,-8(r30)
  606  00001640  001ee820	add	r29,r0,r30
  607  00001644  8fdefffc	lw	r30,-4(r30)
  608  00001648  4be00000	jr	r31
  609  0000164c  54000000	nop
  610  00001650          	.endproc _dstrncmp
  611  00001650          	.align 2
  612  00001650          	.proc _dstrlen
  613  00001650          	.global _dstrlen
  614  00001650          	_dstrlen:
  615                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
  616  00001650  afbefffc	sw	-4(r29),r30; push fp
  617  00001654  001df020	add	r30,r0,r29; fp = sp
  618  00001658  afbffff8	sw	-8(r29),r31; push ret addr
  619  0000165c  2fbd0010	subui	r29,r29,#16; alloc local storage
  620  00001660  afa20000	sw	0(r29),r2
  621  00001664  8fdf0000	lw	r31,(r30)
  622  00001668  20020000	addi	r2,r0,#0
  623  0000166c  08000008	j	L97_LF2
  624  00001670  54000000	nop; not filled.
  625  00001674          	L95_LF2:
  626  00001674  20420001	addi	r2,r2,#1
  627  00001678          	L97_LF2:
  628  00001678  93e10000	lbu	r1,(r31)
  629  0000167c  23ff0001	addi	r31,r31,#1
  630  00001680  64210000	snei	r1,r1,#0
  631  00001684  1420ffec	bnez	r1,L95_LF2
  632  00001688  54000000	nop; not filled.
  633  0000168c  00020820	add	r1,r0,r2
  634  00001690  8fa20000	lw	r2,0(r29)
  635  00001694  8fdffff8	lw	r31,-8(r30)
  636  00001698  001ee820	add	r29,r0,r30
  637  0000169c  8fdefffc	lw	r30,-4(r30)
  638  000016a0  4be00000	jr	r31
  639  000016a4  54000000	nop
  640  000016a8          	.endproc _dstrlen
  641  000016a8          	.align 2
  642  000016a8          	.proc _dstrstr
  643  000016a8          	.global _dstrstr
  644  000016a8          	_dstrstr:
  645                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
  646  000016a8  afbefffc	sw	-4(r29),r30; push fp
  647  000016ac  001df020	add	r30,r0,r29; fp = sp
  648  000016b0  afbffff8	sw	-8(r29),r31; push ret addr
  649  000016b4  2fbd0020	subui	r29,r29,#32; alloc local storage
  650  000016b8  afa20000	sw	0(r29),r2
  651  000016bc  afa30004	sw	4(r29),r3
  652  000016c0  afa40008	sw	8(r29),r4
  653  000016c4  afa5000c	sw	12(r29),r5
  654  000016c8  afa60010	sw	16(r29),r6
  655  000016cc  afa70014	sw	20(r29),r7
  656  000016d0  8fc50000	lw	r5,(r30)
  657  000016d4  8fc70004	lw	r7,4(r30)
  658  000016d8  20030000	addi	r3,r0,#0
  659  000016dc  90e10000	lbu	r1,(r7)
  660  000016e0  20e20001	addi	r2,r7,#1
  661  000016e4  64210000	snei	r1,r1,#0
  662  000016e8  1020001c	beqz	r1,L125_LF2
  663  000016ec  54000000	nop; not filled.
  664  000016f0          	L126_LF2:
  665  000016f0  20630001	addi	r3,r3,#1
  666  000016f4  90410000	lbu	r1,(r2)
  667  000016f8  20420001	addi	r2,r2,#1
  668  000016fc  64210000	snei	r1,r1,#0
  669  00001700  1420ffec	bnez	r1,L126_LF2
  670  00001704  54000000	nop; not filled.
  671  00001708          	L125_LF2:
  672  00001708  00033020	add	r6,r0,r3
  673  0000170c  080000ac	j	L149_LF2
  674  00001710  54000000	nop; not filled.
  675  00001714          	L130_LF2:
  676  00001714  00051820	add	r3,r0,r5
  677  00001718  00072020	add	r4,r0,r7
  678  0000171c  20020000	addi	r2,r0,#0
  679  00001720  0046082a	slt	r1,r2,r6
  680  00001724  1020003c	beqz	r1,L134_LF2
  681  00001728  54000000	nop; not filled.
  682  0000172c          	L136_LF2:
  683  0000172c  909f0000	lbu	r31,(r4)
  684  00001730  67e10000	snei	r1,r31,#0
  685  00001734  10200038	beqz	r1,L150_LF2
  686  00001738  54000000	nop; not filled.
  687  0000173c  90610000	lbu	r1,(r3)
  688  00001740  003f0829	sne	r1,r1,r31
  689  00001744  1420001c	bnez	r1,L134_LF2
  690  00001748  54000000	nop; not filled.
  691  0000174c  20630001	addi	r3,r3,#1
  692  00001750  20840001	addi	r4,r4,#1
  693  00001754  20420001	addi	r2,r2,#1
  694  00001758  0046082a	slt	r1,r2,r6
  695  0000175c  1420ffcc	bnez	r1,L136_LF2
  696  00001760  54000000	nop; not filled.
  697  00001764          	L134_LF2:
  698  00001764  00460828	seq	r1,r2,r6
  699  00001768  10200010	beqz	r1,L141_LF2
  700  0000176c  54000000	nop; not filled.
  701  00001770          	L150_LF2:
  702  00001770  20010000	addi	r1,r0,#0
  703  00001774  08000028	j	L132_LF2
  704  00001778  54000000	nop; not filled.
  705  0000177c          	L141_LF2:
  706  0000177c  90630000	lbu	r3,(r3)
  707  00001780  90820000	lbu	r2,(r4)
  708  00001784  00620822	sub	r1,r3,r2
  709  00001788  74210000	sgei	r1,r1,#0
  710  0000178c  201fffff	addi	r31,r0,#-1
  711  00001790  10200008	beqz	r1,L143_LF2
  712  00001794  54000000	nop; not filled.
  713  00001798  0062f829	sne	r31,r3,r2
  714  0000179c          	L143_LF2:
  715  0000179c  001f0820	add	r1,r0,r31
  716  000017a0          	L132_LF2:
  717  000017a0  64210000	snei	r1,r1,#0
  718  000017a4  14200010	bnez	r1,L131_LF2
  719  000017a8  54000000	nop; not filled.
  720  000017ac  00050820	add	r1,r0,r5
  721  000017b0  0800001c	j	L146_LF2
  722  000017b4  54000000	nop; not filled.
  723  000017b8          	L131_LF2:
  724  000017b8  20a50001	addi	r5,r5,#1
  725  000017bc          	L149_LF2:
  726  000017bc  90a10000	lbu	r1,(r5)
  727  000017c0  64210000	snei	r1,r1,#0
  728  000017c4  1420ff4c	bnez	r1,L130_LF2
  729  000017c8  54000000	nop; not filled.
  730  000017cc  20010000	addi	r1,r0,#0
  731  000017d0          	L146_LF2:
  732  000017d0  8fa20000	lw	r2,0(r29)
  733  000017d4  8fa30004	lw	r3,4(r29)
  734  000017d8  8fa40008	lw	r4,8(r29)
  735  000017dc  8fa5000c	lw	r5,12(r29)
  736  000017e0  8fa60010	lw	r6,16(r29)
  737  000017e4  8fa70014	lw	r7,20(r29)
  738  000017e8  8fdffff8	lw	r31,-8(r30)
  739  000017ec  001ee820	add	r29,r0,r30
  740  000017f0  8fdefffc	lw	r30,-4(r30)
  741  000017f4  4be00000	jr	r31
  742  000017f8  54000000	nop
  743  000017fc          	.endproc _dstrstr
  744  000017fc          	.align 2
  745  000017fc          	.proc _dmindex
  746  000017fc          	.global _dmindex
  747  000017fc          	_dmindex:
  748                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
  749  000017fc  afbefffc	sw	-4(r29),r30; push fp
  750  00001800  001df020	add	r30,r0,r29; fp = sp
  751  00001804  afbffff8	sw	-8(r29),r31; push ret addr
  752  00001808  2fbd0020	subui	r29,r29,#32; alloc local storage
  753  0000180c  afa20000	sw	0(r29),r2
  754  00001810  afa30004	sw	4(r29),r3
  755  00001814  afa40008	sw	8(r29),r4
  756  00001818  afa5000c	sw	12(r29),r5
  757  0000181c  afa60010	sw	16(r29),r6
  758  00001820  8fc40000	lw	r4,(r30)
  759  00001824  8fc60004	lw	r6,4(r30)
  760  00001828  90810000	lbu	r1,(r4)
  761  0000182c  64210000	snei	r1,r1,#0
  762  00001830  10200060	beqz	r1,L164_LF2
  763  00001834  54000000	nop; not filled.
  764  00001838  00012820	add	r5,r0,r1
  765  0000183c          	L165_LF2:
  766  0000183c  00061020	add	r2,r0,r6
  767  00001840  80df0000	lb	r31,(r6)
  768  00001844  33e100ff	andi	r1,r31,#0x00ff
  769  00001848  64210000	snei	r1,r1,#0
  770  0000184c  1020003c	beqz	r1,L163_LF2
  771  00001850  54000000	nop; not filled.
  772  00001854  90830000	lbu	r3,(r4)
  773  00001858          	L169_LF2:
  774  00001858  33e100ff	andi	r1,r31,#0x00ff
  775  0000185c  00610828	seq	r1,r3,r1
  776  00001860  10200010	beqz	r1,L168_LF2
  777  00001864  54000000	nop; not filled.
  778  00001868  00040820	add	r1,r0,r4
  779  0000186c  08000028	j	L173_LF2
  780  00001870  54000000	nop; not filled.
  781  00001874          	L168_LF2:
  782  00001874  20420001	addi	r2,r2,#1
  783  00001878  805f0000	lb	r31,(r2)
  784  0000187c  33e100ff	andi	r1,r31,#0x00ff
  785  00001880  64210000	snei	r1,r1,#0
  786  00001884  1420ffd0	bnez	r1,L169_LF2
  787  00001888  54000000	nop; not filled.
  788  0000188c          	L163_LF2:
  789  0000188c  14a0ffac	bnez	r5,L165_LF2
  790  00001890  54000000	nop; not filled.
  791  00001894          	L164_LF2:
  792  00001894  20010000	addi	r1,r0,#0
  793  00001898          	L173_LF2:
  794  00001898  8fa20000	lw	r2,0(r29)
  795  0000189c  8fa30004	lw	r3,4(r29)
  796  000018a0  8fa40008	lw	r4,8(r29)
  797  000018a4  8fa5000c	lw	r5,12(r29)
  798  000018a8  8fa60010	lw	r6,16(r29)
  799  000018ac  8fdffff8	lw	r31,-8(r30)
  800  000018b0  001ee820	add	r29,r0,r30
  801  000018b4  8fdefffc	lw	r30,-4(r30)
  802  000018b8  4be00000	jr	r31
  803  000018bc  54000000	nop
  804  000018c0          	.endproc _dmindex
  805  000018c0          	.align 2
  806  000018c0          	.proc _dindex
  807  000018c0          	.global _dindex
  808  000018c0          	_dindex:
  809                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
  810  000018c0  afbefffc	sw	-4(r29),r30; push fp
  811  000018c4  001df020	add	r30,r0,r29; fp = sp
  812  000018c8  afbffff8	sw	-8(r29),r31; push ret addr
  813  000018cc  2fbd0010	subui	r29,r29,#16; alloc local storage
  814  000018d0  afa20000	sw	0(r29),r2
  815  000018d4  afa30004	sw	4(r29),r3
  816  000018d8  8fc20000	lw	r2,(r30)
  817  000018dc  8fc30004	lw	r3,4(r30)
  818  000018e0  08000024	j	L187_LF2
  819  000018e4  54000000	nop; not filled.
  820  000018e8          	L183_LF2:
  821  000018e8  33e100ff	andi	r1,r31,#0x00ff
  822  000018ec  00230828	seq	r1,r1,r3
  823  000018f0  10200010	beqz	r1,L184_LF2
  824  000018f4  54000000	nop; not filled.
  825  000018f8  00020820	add	r1,r0,r2
  826  000018fc  08000020	j	L186_LF2
  827  00001900  54000000	nop; not filled.
  828  00001904          	L184_LF2:
  829  00001904  20420001	addi	r2,r2,#1
  830  00001908          	L187_LF2:
  831  00001908  805f0000	lb	r31,(r2)
  832  0000190c  33e100ff	andi	r1,r31,#0x00ff
  833  00001910  64210000	snei	r1,r1,#0
  834  00001914  1420ffd0	bnez	r1,L183_LF2
  835  00001918  54000000	nop; not filled.
  836  0000191c  20010000	addi	r1,r0,#0
  837  00001920          	L186_LF2:
  838  00001920  8fa20000	lw	r2,0(r29)
  839  00001924  8fa30004	lw	r3,4(r29)
  840  00001928  8fdffff8	lw	r31,-8(r30)
  841  0000192c  001ee820	add	r29,r0,r30
  842  00001930  8fdefffc	lw	r30,-4(r30)
  843  00001934  4be00000	jr	r31
  844  00001938  54000000	nop
  845  0000193c          	.endproc _dindex
  846  0000193c          	.align 2
  847  0000193c          	.proc _ditoa
  848  0000193c          	.global _ditoa
  849  0000193c          	_ditoa:
  850                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
  851  0000193c  afbefffc	sw	-4(r29),r30; push fp
  852  00001940  001df020	add	r30,r0,r29; fp = sp
  853  00001944  afbffff8	sw	-8(r29),r31; push ret addr
  854  00001948  2fbd0020	subui	r29,r29,#32; alloc local storage
  855  0000194c  afa20000	sw	0(r29),r2
  856  00001950  afa30004	sw	4(r29),r3
  857  00001954  afa40008	sw	8(r29),r4
  858  00001958  afa5000c	sw	12(r29),r5
  859  0000195c  afa60010	sw	16(r29),r6
  860  00001960  8fc30000	lw	r3,(r30)
  861  00001964  8fc40004	lw	r4,4(r30)
  862  00001968  68610000	slti	r1,r3,#0
  863  0000196c  10200010	beqz	r1,L203_LF2
  864  00001970  54000000	nop; not filled.
  865  00001974  2006002d	addi	r6,r0,(#0x2d)&0xff
  866  00001978  08000014	j	L216_LF2
  867  0000197c  54000000	nop; not filled.
  868  00001980          	L203_LF2:
  869  00001980  64610000	snei	r1,r3,#0
  870  00001984  14200018	bnez	r1,L205_LF2
  871  00001988  54000000	nop; not filled.
  872  0000198c  20060030	addi	r6,r0,(#0x30)&0xff
  873  00001990          	L216_LF2:
  874  00001990  a0860000	sb	(r4),r6
  875  00001994  20840001	addi	r4,r4,#1
  876  00001998  0800007c	j	L204_LF2
  877  0000199c  54000000	nop; not filled.
  878  000019a0          	L205_LF2:
  879  000019a0  201f0001	addi	r31,r0,#1
  880  000019a4  03e3082c	sle	r1,r31,r3
  881  000019a8  1020001c	beqz	r1,L208_LF2
  882  000019ac  54000000	nop; not filled.
  883  000019b0          	L209_LF2:
  884  000019b0  53e10002	slli	r1,r31,#0x2
  885  000019b4  003f0820	add	r1,r1,r31
  886  000019b8  503f0001	slli	r31,r1,#0x1
  887  000019bc  03e3082c	sle	r1,r31,r3
  888  000019c0  1420ffec	bnez	r1,L209_LF2
  889  000019c4  54000000	nop; not filled.
  890  000019c8          	L208_LF2:
  891  000019c8  2005000a	addi	r5,r0,#10
  892  000019cc          	L212_LF2:
  893  000019cc  03e00035	movi2fp	f0,r31
  894  000019d0  00a00835	movi2fp	f1,r5
  895  000019d4  0401000f	div	f0,f0,f1
  896  000019d8  0000f834	movfp2i	r31,f0
  897  000019dc  00600035	movi2fp	f0,r3
  898  000019e0  03e00835	movi2fp	f1,r31
  899  000019e4  0401000f	div	f0,f0,f1
  900  000019e8  00001034	movfp2i	r2,f0
  901  000019ec  20410030	addi	r1,r2,#48
  902  000019f0  a0810000	sb	(r4),r1
  903  000019f4  20840001	addi	r4,r4,#1
  904  000019f8  00400035	movi2fp	f0,r2
  905  000019fc  03e00835	movi2fp	f1,r31
  906  00001a00  0401000e	mult	f0,f0,f1
  907  00001a04  00000834	movfp2i	r1,f0
  908  00001a08  00611822	sub	r3,r3,r1
  909  00001a0c  6fe10001	sgti	r1,r31,#1
  910  00001a10  1420ffb8	bnez	r1,L212_LF2
  911  00001a14  54000000	nop; not filled.
  912  00001a18          	L204_LF2:
  913  00001a18  20060000	addi	r6,r0,(#0x0)&0xff
  914  00001a1c  a0860000	sb	(r4),r6
  915  00001a20  8fa20000	lw	r2,0(r29)
  916  00001a24  8fa30004	lw	r3,4(r29)
  917  00001a28  8fa40008	lw	r4,8(r29)
  918  00001a2c  8fa5000c	lw	r5,12(r29)
  919  00001a30  8fa60010	lw	r6,16(r29)
  920  00001a34  8fdffff8	lw	r31,-8(r30)
  921  00001a38  001ee820	add	r29,r0,r30
  922  00001a3c  8fdefffc	lw	r30,-4(r30)
  923  00001a40  4be00000	jr	r31
  924  00001a44  54000000	nop
  925  00001a48          	.endproc _ditoa
  926  00001a48          	.align 2
  927  00001a48          	.proc _dstrtol
  928  00001a48          	.global _dstrtol
  929  00001a48          	_dstrtol:
  930                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
  931  00001a48  afbefffc	sw	-4(r29),r30; push fp
  932  00001a4c  001df020	add	r30,r0,r29; fp = sp
  933  00001a50  afbffff8	sw	-8(r29),r31; push ret addr
  934  00001a54  2fbd0020	subui	r29,r29,#32; alloc local storage
  935  00001a58  afa20000	sw	0(r29),r2
  936  00001a5c  afa30004	sw	4(r29),r3
  937  00001a60  afa40008	sw	8(r29),r4
  938  00001a64  afa5000c	sw	12(r29),r5
  939  00001a68  afa60010	sw	16(r29),r6
  940  00001a6c  8fc20000	lw	r2,(r30)
  941  00001a70  8fc50004	lw	r5,4(r30)
  942  00001a74  8fc40008	lw	r4,8(r30)
  943  00001a78  20030000	addi	r3,r0,#0
  944  00001a7c  08000008	j	L247_LF2
  945  00001a80  54000000	nop; not filled.
  946  00001a84          	L220_LF2:
  947  00001a84  20420001	addi	r2,r2,#1
  948  00001a88          	L247_LF2:
  949  00001a88  805f0000	lb	r31,(r2)
  950  00001a8c  33e100ff	andi	r1,r31,#0x00ff
  951  00001a90  60210020	seqi	r1,r1,#32
  952  00001a94  1420ffec	bnez	r1,L220_LF2
  953  00001a98  54000000	nop; not filled.
  954  00001a9c  23e1fff7	addi	r1,r31,#-9
  955  00001aa0  302100ff	andi	r1,r1,#0x00ff
  956  00001aa4  70210001	sleui	r1,r1,#1
  957  00001aa8  1420ffd8	bnez	r1,L220_LF2
  958  00001aac  54000000	nop; not filled.
  959  00001ab0  64a10000	snei	r1,r5,#0
  960  00001ab4  10200008	beqz	r1,L222_LF2
  961  00001ab8  54000000	nop; not filled.
  962  00001abc  aca20000	sw	(r5),r2
  963  00001ac0          	L222_LF2:
  964  00001ac0  905f0000	lbu	r31,(r2)
  965  00001ac4  67e10000	snei	r1,r31,#0
  966  00001ac8  10200090	beqz	r1,L248_LF2
  967  00001acc  54000000	nop; not filled.
  968  00001ad0  63e1002d	seqi	r1,r31,#45
  969  00001ad4  10200014	beqz	r1,L224_LF2
  970  00001ad8  54000000	nop; not filled.
  971  00001adc  2006ffff	addi	r6,r0,#-1
  972  00001ae0  20420001	addi	r2,r2,#1
  973  00001ae4  08000008	j	L225_LF2
  974  00001ae8  54000000	nop; not filled.
  975  00001aec          	L224_LF2:
  976  00001aec  20060001	addi	r6,r0,#1
  977  00001af0          	L225_LF2:
  978  00001af0  64810000	snei	r1,r4,#0
  979  00001af4  14200054	bnez	r1,L226_LF2
  980  00001af8  54000000	nop; not filled.
  981  00001afc  90410000	lbu	r1,(r2)
  982  00001b00  60210030	seqi	r1,r1,#48
  983  00001b04  10200040	beqz	r1,L227_LF2
  984  00001b08  54000000	nop; not filled.
  985  00001b0c  20420001	addi	r2,r2,#1
  986  00001b10  905f0000	lbu	r31,(r2)
  987  00001b14  63e10078	seqi	r1,r31,#120
  988  00001b18  14200010	bnez	r1,L229_LF2
  989  00001b1c  54000000	nop; not filled.
  990  00001b20  63e10058	seqi	r1,r31,#88
  991  00001b24  10200014	beqz	r1,L228_LF2
  992  00001b28  54000000	nop; not filled.
  993  00001b2c          	L229_LF2:
  994  00001b2c  20040010	addi	r4,r0,#16
  995  00001b30  20420001	addi	r2,r2,#1
  996  00001b34  08000014	j	L226_LF2
  997  00001b38  54000000	nop; not filled.
  998  00001b3c          	L228_LF2:
  999  00001b3c  20040008	addi	r4,r0,#8
 1000  00001b40  08000008	j	L226_LF2
 1001  00001b44  54000000	nop; not filled.
 1002  00001b48          	L227_LF2:
 1003  00001b48  2004000a	addi	r4,r0,#10
 1004  00001b4c          	L226_LF2:
 1005  00001b4c  2081ffff	addi	r1,r4,#-1
 1006  00001b50  6c21000f	sgtui	r1,r1,#15
 1007  00001b54  10200010	beqz	r1,L233_LF2
 1008  00001b58  54000000	nop; not filled.
 1009  00001b5c          	L248_LF2:
 1010  00001b5c  00030820	add	r1,r0,r3
 1011  00001b60  080000c4	j	L245_LF2
 1012  00001b64  54000000	nop; not filled.
 1013  00001b68          	L233_LF2:
 1014  00001b68  805f0000	lb	r31,(r2)
 1015  00001b6c  23e1ffd0	addi	r1,r31,#-48
 1016  00001b70  302100ff	andi	r1,r1,#0x00ff
 1017  00001b74  70210009	sleui	r1,r1,#9
 1018  00001b78  10200014	beqz	r1,L236_LF2
 1019  00001b7c  54000000	nop; not filled.
 1020  00001b80  33e100ff	andi	r1,r31,#0x00ff
 1021  00001b84  2021ffd0	addi	r1,r1,#-48
 1022  00001b88  08000050	j	L237_LF2
 1023  00001b8c  54000000	nop; not filled.
 1024  00001b90          	L236_LF2:
 1025  00001b90  23e1ff9f	addi	r1,r31,#-97
 1026  00001b94  302100ff	andi	r1,r1,#0x00ff
 1027  00001b98  70210019	sleui	r1,r1,#25
 1028  00001b9c  10200014	beqz	r1,L238_LF2
 1029  00001ba0  54000000	nop; not filled.
 1030  00001ba4  33e100ff	andi	r1,r31,#0x00ff
 1031  00001ba8  2021ffa9	addi	r1,r1,#-87
 1032  00001bac  0800002c	j	L237_LF2
 1033  00001bb0  54000000	nop; not filled.
 1034  00001bb4          	L238_LF2:
 1035  00001bb4  23e1ffbf	addi	r1,r31,#-65
 1036  00001bb8  302100ff	andi	r1,r1,#0x00ff
 1037  00001bbc  70210019	sleui	r1,r1,#25
 1038  00001bc0  10200014	beqz	r1,L240_LF2
 1039  00001bc4  54000000	nop; not filled.
 1040  00001bc8  33e100ff	andi	r1,r31,#0x00ff
 1041  00001bcc  2021ffc9	addi	r1,r1,#-55
 1042  00001bd0  08000008	j	L237_LF2
 1043  00001bd4  54000000	nop; not filled.
 1044  00001bd8          	L240_LF2:
 1045  00001bd8  200103e8	addi	r1,r0,#1000
 1046  00001bdc          	L237_LF2:
 1047  00001bdc  0024f82a	slt	r31,r1,r4
 1048  00001be0  13e00024	beqz	r31,L246_LF2
 1049  00001be4  54000000	nop; not filled.
 1050  00001be8  00600035	movi2fp	f0,r3
 1051  00001bec  00800835	movi2fp	f1,r4
 1052  00001bf0  0401000e	mult	f0,f0,f1
 1053  00001bf4  00001834	movfp2i	r3,f0
 1054  00001bf8  00611820	add	r3,r3,r1
 1055  00001bfc  20420001	addi	r2,r2,#1
 1056  00001c00  17e0ff64	bnez	r31,L233_LF2
 1057  00001c04  54000000	nop; not filled.
 1058  00001c08          	L246_LF2:
 1059  00001c08  64a10000	snei	r1,r5,#0
 1060  00001c0c  10200008	beqz	r1,L244_LF2
 1061  00001c10  54000000	nop; not filled.
 1062  00001c14  aca20000	sw	(r5),r2
 1063  00001c18          	L244_LF2:
 1064  00001c18  00600035	movi2fp	f0,r3
 1065  00001c1c  00c00835	movi2fp	f1,r6
 1066  00001c20  0401000e	mult	f0,f0,f1
 1067  00001c24  00000834	movfp2i	r1,f0
 1068  00001c28          	L245_LF2:
 1069  00001c28  8fa20000	lw	r2,0(r29)
 1070  00001c2c  8fa30004	lw	r3,4(r29)
 1071  00001c30  8fa40008	lw	r4,8(r29)
 1072  00001c34  8fa5000c	lw	r5,12(r29)
 1073  00001c38  8fa60010	lw	r6,16(r29)
 1074  00001c3c  8fdffff8	lw	r31,-8(r30)
 1075  00001c40  001ee820	add	r29,r0,r30
 1076  00001c44  8fdefffc	lw	r30,-4(r30)
 1077  00001c48  4be00000	jr	r31
 1078  00001c4c  54000000	nop
 1079  00001c50          	.endproc _dstrtol
 1080  00001c50          	.align 2
 1081  00001c50          	.proc _bcopy
 1082  00001c50          	.global _bcopy
 1083  00001c50          	_bcopy:
 1084                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
 1085  00001c50  afbefffc	sw	-4(r29),r30; push fp
 1086  00001c54  001df020	add	r30,r0,r29; fp = sp
 1087  00001c58  afbffff8	sw	-8(r29),r31; push ret addr
 1088  00001c5c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1089  00001c60  afa20000	sw	0(r29),r2
 1090  00001c64  afa30004	sw	4(r29),r3
 1091  00001c68  afa40008	sw	8(r29),r4
 1092  00001c6c  8fc30000	lw	r3,(r30)
 1093  00001c70  8fc20004	lw	r2,4(r30)
 1094  00001c74  8fdf0008	lw	r31,8(r30)
 1095  00001c78  08000014	j	L259_LF2
 1096  00001c7c  54000000	nop; not filled.
 1097  00001c80          	L257_LF2:
 1098  00001c80  80640000	lb	r4,(r3)
 1099  00001c84  a0440000	sb	(r2),r4
 1100  00001c88  20630001	addi	r3,r3,#1
 1101  00001c8c  20420001	addi	r2,r2,#1
 1102  00001c90          	L259_LF2:
 1103  00001c90  001f0820	add	r1,r0,r31
 1104  00001c94  23ffffff	addi	r31,r31,#-1
 1105  00001c98  6c210000	sgti	r1,r1,#0
 1106  00001c9c  1420ffe0	bnez	r1,L257_LF2
 1107  00001ca0  54000000	nop; not filled.
 1108  00001ca4  8fa20000	lw	r2,0(r29)
 1109  00001ca8  8fa30004	lw	r3,4(r29)
 1110  00001cac  8fa40008	lw	r4,8(r29)
 1111  00001cb0  8fdffff8	lw	r31,-8(r30)
 1112  00001cb4  001ee820	add	r29,r0,r30
 1113  00001cb8  8fdefffc	lw	r30,-4(r30)
 1114  00001cbc  4be00000	jr	r31
 1115  00001cc0  54000000	nop
 1116  00001cc4          	.endproc _bcopy
 1117  00001cc4          	.align 2
 1118  00001cc4          	.proc _bzero
 1119  00001cc4          	.global _bzero
 1120  00001cc4          	_bzero:
 1121                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
 1122  00001cc4  afbefffc	sw	-4(r29),r30; push fp
 1123  00001cc8  001df020	add	r30,r0,r29; fp = sp
 1124  00001ccc  afbffff8	sw	-8(r29),r31; push ret addr
 1125  00001cd0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1126  00001cd4  afa20000	sw	0(r29),r2
 1127  00001cd8  afa30004	sw	4(r29),r3
 1128  00001cdc  8fc20000	lw	r2,(r30)
 1129  00001ce0  8fdf0004	lw	r31,4(r30)
 1130  00001ce4  08000010	j	L270_LF2
 1131  00001ce8  54000000	nop; not filled.
 1132  00001cec          	L268_LF2:
 1133  00001cec  20030000	addi	r3,r0,(#0x0)&0xff
 1134  00001cf0  a0430000	sb	(r2),r3
 1135  00001cf4  20420001	addi	r2,r2,#1
 1136  00001cf8          	L270_LF2:
 1137  00001cf8  001f0820	add	r1,r0,r31
 1138  00001cfc  23ffffff	addi	r31,r31,#-1
 1139  00001d00  6c210000	sgti	r1,r1,#0
 1140  00001d04  1420ffe4	bnez	r1,L268_LF2
 1141  00001d08  54000000	nop; not filled.
 1142  00001d0c  8fa20000	lw	r2,0(r29)
 1143  00001d10  8fa30004	lw	r3,4(r29)
 1144  00001d14  8fdffff8	lw	r31,-8(r30)
 1145  00001d18  001ee820	add	r29,r0,r30
 1146  00001d1c  8fdefffc	lw	r30,-4(r30)
 1147  00001d20  4be00000	jr	r31
 1148  00001d24  54000000	nop
 1149  00001d28          	.endproc _bzero
 1150                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1151                      ;;;
 1152                      ;;; Most of the traps are called in files from libtraps.
 1155  00001d28          	.align 2
 1156  00001d28          	.proc _exit
 1157  00001d28          	.global _exit
 1158  00001d28          	_exit:
 1159  00001d28  44000300	trap	#0x300
 1160  00001d2c  4be00000	jr	r31
 1161  00001d30  54000000	nop
 1162  00001d34          	.endproc _exit
 1164                      ; for the benefit of gcc.
 1165  00001d34          	.proc ___main
 1166  00001d34          	.global ___main
 1167  00001d34          	___main:
 1168  00001d34  4be00000	jr	r31
 1169  00001d38  54000000	nop
 1170  00001d3c          	.endproc ___main
 1171  00001d3c          	.text
 1172  00001d3c          	.global _etext
 1173  00001d3c          	_etext:
 1174  00001d3c          	.align 3
 1175  00001d40          	.data
 1176  00002025          	.global _edata
 1177  00002025          	_edata:
